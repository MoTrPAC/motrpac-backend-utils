[tool.poetry]
name = "motrpac-backend-utils"
version = "0.1.18"
description = ""
authors = ["Mihir Samdarshi <msamdars@stanford.edu>"]
packages = [{ include = "motrpac_backend_utils" }]
license = "Apache-2.0"

[tool.poetry.dependencies]
python = "^3.9"
flask = { version = "^2.2.2", optional = true }
google-auth = "^2.19.1"
google-cloud-logging = "^3.2.2"
google-cloud-pubsub = { version = "^2.13.6", optional = true }
google-cloud-storage = { version = "^2.5.0", optional = true }
opentelemetry-api = "*"
opentelemetry-exporter-gcp-trace = "*"
opentelemetry-instrumentation-requests = "*"
opentelemetry-instrumentation-urllib3 = "*"
opentelemetry-propagator-gcp = "*"
opentelemetry-sdk = "*"
protobuf = { version = "^4.21.1", optional = true }
psutil = { version = "^5.9.0", optional = true }
smart-open = { version = "^6.0.0", optional = true }
typing-extensions = "^4.3.0"

[tool.poetry.dev-dependencies]
twine = "^4.0.1"
isort = "^5.10.1"
black = "^23.3.0"
bandit = "^1.7.4"
mypy = "^1.3.0"
ruff = ">=0.0.270"

[tool.ruff]
line-length = 90
select = ["ALL"]
exclude = ["*_pb2.py", "*_pb2.pyi"]
ignore = [
    "ANN002",
    "ANN003",
    "ANN101",
    "ANN102",
    "ANN401",
    "BLE001",
    "D104",
    "D105",
    "D107",
    "D200",
    "D203",
    "D205",
    "D212",
    "D401",
    "DTZ",
    "I001",
    "INP001",
    "E501",
    "F401",
    "PLR2004"
]

[tool.poetry.extras]
zipper = ["google-cloud-storage", "psutil", "smart-open", "google-cloud-pubsub", "protobuf"]
messaging = ["google-cloud-pubsub", "protobuf"]
flask = ["flask"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
